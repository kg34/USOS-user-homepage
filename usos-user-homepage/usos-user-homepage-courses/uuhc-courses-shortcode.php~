<?php

function uuhc_courses_shortcode_function($atts) {

// 	$atts = shortcode_atts(array(
// 		'description' => true,
// 		'date' => false,
// 		//'day_of_week' => true,
// 		'start_hour' => true,
// 		'end_hour' => true,
// 		//'start_monday' => true, //if false start today
// 		'visitors_info' => '',
// 		), $atts);
// 		
// 	$select_atts = array(
// 		'date' => $atts['date'],
// 		'start_hour' => $atts['start_hour'],
// 		'end_hour' => $atts['end_hour'],
// 		'title' => true,
// 		'description' => $atts['description'],
// 		);
		
// 	$current_user = wp_get_current_user();
// 	$user_id = $current_user->ID;

// 	if (! $user_id)
// 		return $atts['visitors_info'];
// 	
// 	$monday_date = date('Y-m-d', last_monday(date('Y-m-d')));
// 	$dayNames = array("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday");
// 	$output = '<table class="form-table editcomment">';// class="form table">';
// 	$date = $monday_date;
// 	for ($i = 0; $i < 7; $i++) {
// 		$events = uuhs_database_get_day_events($date, $user_id, $select_atts);
// 		$output = $output."<tr><td colspan=4>".__($dayNames[$i])." ".short_date($date)."</td></tr>";
// 		foreach ( $events as $event ) {
// 			$event->start_hour = substr($event->start_hour, 0, -3);
// 			$event->end_hour = substr($event->end_hour, 0, -3);
// 			$line = '';
// 			foreach ( $event as $value )
// 				$line = $line.'<td>'.$value.'</td>';
// 			$output = $output.'<tr>'.$line.'</tr>';
// 		}
// 		$date = date('Y-m-d', next_day($date));
// 	}
// 	$output = $output."</table>";
//	return $output;
	return uuhc_get_user_courses();
}

add_shortcode('uuh-courses', 'uuhc_courses_shortcode_function');
	
function uuhc_get_user_courses(/*$user_login, $user*/) {
//	$user_id = $user->ID;
	
	$current_user = wp_get_current_user();
 	$user_id = $current_user->ID;
 	
	if (! uuh_usos_user($user_id))
		return;
	
	if( ! class_exists( 'Hybrid_Auth', false ) ) {
		require_once WP_PLUGIN_DIR . "/wordpress-social-login/hybridauth/Hybrid/Auth.php";
	}
	$config = wsl_process_login_build_provider_config( "Usosweb");
	try {
		$h = new Hybrid_Auth($config); 
//		Hybrid_Auth::initialize( $config );
// 		if( ! Hybrid_Auth::storage()->get( "hauth_session.Usosweb.is_logged_in" ) ){
// 			//uuhc_database_delete_usos_events($user_id);
// 			return 'HI';
// 		}
// 		else
//			$adapter = Hybrid_Auth::getAdapter( "Usosweb" );
	$adapter = $h->authenticate( "Usosweb" );
	}
	catch( Exception $e ) {
		return "Ooophs, we got an error: " . $e->getMessage();
	}

	
//	uuhc_database_delete_usos_events($user_id);
	$response = $adapter->api()->get( 'https://usosapps.uw.edu.pl/services/courses/user?fields=course_editions' );
	return print_r($response, true);
	//foreach ( $response as $event )
	//	uuhc_add_event($event, $user_id);
	//return (property_exists($response,'id'))?$response->id:"";
	//return $start[0]."</br>".$start[1];
	//return print_r($response[0], true)."</br></br>".print_r($response[1], true)."</br></br>".print_r($response[2], true)."</br></br>".print_r($response, true);
}

//add_action('wp_login', 'uuhc_getUserSchedule', 10, 2);

//require_once( USOS_HOMEPAGE_SCHEDULE_ABS_PATH . '/uuhc.database.php' );

function uuhc_add_course($response, $user_id) {
	$course = array(
		'' => $response->name->pl,
		'user_id' => $user_id,
		'description' => '',
		'source' => 'usos'
	);
	$start = explode(" ", $response->start_time);
	$end = explode(" ", $response->end_time);
	$time = array(
		'date' => $start[0],
		'day_of_week' => 0,
		'start_hour'=> $start[1],
		'end_hour' => $end[1],
		'source' => 'usos'
	);
	$times = array(
		0 => $time,
	);
	uuhc_database_add_event($event, $times);
}
?>
